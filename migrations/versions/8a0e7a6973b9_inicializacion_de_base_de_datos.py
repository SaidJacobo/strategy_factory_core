"""inicializacion de base de datos

Revision ID: 8a0e7a6973b9
Revises: 
Create Date: 2025-06-22 14:58:34.803618

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8a0e7a6973b9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Categories',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Commission', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Configs',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Value', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Strategies',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Description', sa.String(), nullable=False),
    sa.Column('MetaTraderName', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Timeframes',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('MetaTraderNumber', sa.Integer(), nullable=False),
    sa.Column('Selected', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Tickers',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('CategoryId', sa.Integer(), nullable=True),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Spread', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['CategoryId'], ['Categories.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Bots',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('StrategyId', sa.Integer(), nullable=True),
    sa.Column('TickerId', sa.Integer(), nullable=True),
    sa.Column('TimeframeId', sa.Integer(), nullable=True),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Risk', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['StrategyId'], ['Strategies.Id'], ),
    sa.ForeignKeyConstraint(['TickerId'], ['Tickers.Id'], ),
    sa.ForeignKeyConstraint(['TimeframeId'], ['Timeframes.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('BotPerformances',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BotId', sa.Integer(), nullable=True),
    sa.Column('DateFrom', sa.Date(), nullable=False),
    sa.Column('DateTo', sa.Date(), nullable=False),
    sa.Column('Method', sa.String(), nullable=False),
    sa.Column('StabilityRatio', sa.Float(), nullable=False),
    sa.Column('Trades', sa.Integer(), nullable=False),
    sa.Column('Return', sa.Float(), nullable=False),
    sa.Column('Drawdown', sa.Float(), nullable=False),
    sa.Column('RreturnDd', sa.Float(), nullable=False),
    sa.Column('StabilityWeightedRar', sa.Float(), nullable=False),
    sa.Column('WinRate', sa.Float(), nullable=False),
    sa.Column('Duration', sa.Integer(), nullable=False),
    sa.Column('Favorite', sa.Boolean(), nullable=False),
    sa.Column('InitialCash', sa.Float(), nullable=False),
    sa.Column('ExposureTime', sa.Float(), nullable=False),
    sa.Column('KellyCriterion', sa.Float(), nullable=False),
    sa.Column('WinratePValue', sa.Float(), nullable=False),
    sa.Column('SharpeRatio', sa.Float(), nullable=True),
    sa.Column('JarqueBeraStat', sa.Float(), nullable=True),
    sa.Column('JarqueBeraPValue', sa.Float(), nullable=True),
    sa.Column('Skew', sa.Float(), nullable=True),
    sa.Column('Kurtosis', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['BotId'], ['Bots.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_index(op.f('ix_BotPerformances_DateFrom'), 'BotPerformances', ['DateFrom'], unique=False)
    op.create_index(op.f('ix_BotPerformances_DateTo'), 'BotPerformances', ['DateTo'], unique=False)
    op.create_table('BotTradePerformances',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BotPerformanceId', sa.Integer(), nullable=True),
    sa.Column('MeanWinningReturnPct', sa.Float(), nullable=False),
    sa.Column('StdWinningReturnPct', sa.Float(), nullable=False),
    sa.Column('MeanLosingReturnPct', sa.Float(), nullable=False),
    sa.Column('StdLosingReturnPct', sa.Float(), nullable=False),
    sa.Column('MeanTradeDuration', sa.Float(), nullable=False),
    sa.Column('StdTradeDuration', sa.Float(), nullable=False),
    sa.Column('LongWinrate', sa.Float(), nullable=False),
    sa.Column('WinLongMeanReturnPct', sa.Float(), nullable=False),
    sa.Column('WinLongStdReturnPct', sa.Float(), nullable=False),
    sa.Column('LoseLongMeanReturnPct', sa.Float(), nullable=False),
    sa.Column('LoseLongStdReturnPct', sa.Float(), nullable=False),
    sa.Column('ShortWinrate', sa.Float(), nullable=False),
    sa.Column('WinShortMeanReturnPct', sa.Float(), nullable=False),
    sa.Column('WinShortStdReturnPct', sa.Float(), nullable=False),
    sa.Column('LoseShortMeanReturnPct', sa.Float(), nullable=False),
    sa.Column('LoseShortStdReturnPct', sa.Float(), nullable=False),
    sa.Column('MeanReturnPct', sa.Float(), nullable=False),
    sa.Column('StdReturnPct', sa.Float(), nullable=False),
    sa.Column('ProfitFactor', sa.Float(), nullable=False),
    sa.Column('WinRate', sa.Float(), nullable=False),
    sa.Column('ConsecutiveWins', sa.Integer(), nullable=False),
    sa.Column('ConsecutiveLosses', sa.Integer(), nullable=False),
    sa.Column('LongCount', sa.Integer(), nullable=False),
    sa.Column('ShortCount', sa.Integer(), nullable=False),
    sa.Column('LongMeanReturnPct', sa.Integer(), nullable=False),
    sa.Column('LongStdReturnPct', sa.Integer(), nullable=False),
    sa.Column('ShortMeanReturnPct', sa.Integer(), nullable=False),
    sa.Column('ShortStdReturnPct', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['BotPerformanceId'], ['BotPerformances.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('BotPerformanceId')
    )
    op.create_table('LuckTests',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BotPerformanceId', sa.Integer(), nullable=False),
    sa.Column('LuckTestPerformanceId', sa.Integer(), nullable=False),
    sa.Column('TradesPercentToRemove', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['BotPerformanceId'], ['BotPerformances.Id'], ),
    sa.ForeignKeyConstraint(['LuckTestPerformanceId'], ['BotPerformances.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('MontecarloTests',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BotPerformanceId', sa.Integer(), nullable=False),
    sa.Column('Simulations', sa.Integer(), nullable=False),
    sa.Column('ThresholdRuin', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['BotPerformanceId'], ['BotPerformances.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('RandomTests',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BotPerformanceId', sa.Integer(), nullable=False),
    sa.Column('RandomTestPerformanceId', sa.Integer(), nullable=True),
    sa.Column('Iterations', sa.Integer(), nullable=False),
    sa.Column('ReturnDdMeanDiff', sa.Float(), nullable=True),
    sa.Column('ReturnDdStdDiff', sa.Float(), nullable=True),
    sa.Column('ReturnDdPValue', sa.Float(), nullable=True),
    sa.Column('ReturnDdZScore', sa.Float(), nullable=True),
    sa.Column('ReturnMeanDiff', sa.Float(), nullable=True),
    sa.Column('ReturnStdDiff', sa.Float(), nullable=True),
    sa.Column('ReturnPValue', sa.Float(), nullable=True),
    sa.Column('ReturnZScore', sa.Float(), nullable=True),
    sa.Column('DrawdownMeanDiff', sa.Float(), nullable=True),
    sa.Column('DrawdownStdDiff', sa.Float(), nullable=True),
    sa.Column('DrawdownPValue', sa.Float(), nullable=True),
    sa.Column('DrawdownZScore', sa.Float(), nullable=True),
    sa.Column('WinrateMeanDiff', sa.Float(), nullable=True),
    sa.Column('WinrateStdDiff', sa.Float(), nullable=True),
    sa.Column('WinratePValue', sa.Float(), nullable=True),
    sa.Column('WinrateZScore', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['BotPerformanceId'], ['BotPerformances.Id'], ),
    sa.ForeignKeyConstraint(['RandomTestPerformanceId'], ['BotPerformances.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Trades',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('BotPerformanceId', sa.Integer(), nullable=False),
    sa.Column('Size', sa.Integer(), nullable=False),
    sa.Column('EntryBar', sa.Integer(), nullable=False),
    sa.Column('ExitBar', sa.Integer(), nullable=False),
    sa.Column('EntryPrice', sa.Float(), nullable=False),
    sa.Column('ExitPrice', sa.Float(), nullable=False),
    sa.Column('SL', sa.Float(), nullable=True),
    sa.Column('TP', sa.Float(), nullable=True),
    sa.Column('Tag', sa.String(), nullable=True),
    sa.Column('PnL', sa.Float(), nullable=False),
    sa.Column('NetPnL', sa.Float(), nullable=False),
    sa.Column('Commission', sa.Float(), nullable=False),
    sa.Column('ReturnPct', sa.Float(), nullable=False),
    sa.Column('EntryTime', sa.DateTime(), nullable=False),
    sa.Column('ExitTime', sa.DateTime(), nullable=False),
    sa.Column('Duration', sa.Integer(), nullable=False),
    sa.Column('Equity', sa.Float(), nullable=False),
    sa.Column('TopBest', sa.Boolean(), nullable=True),
    sa.Column('TopWorst', sa.Boolean(), nullable=True),
    sa.Column('EntryConversionRate', sa.Float(), nullable=False),
    sa.Column('ExitConversionRate', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['BotPerformanceId'], ['BotPerformances.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('MetricsWarehouse',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('MontecarloTestId', sa.Integer(), nullable=False),
    sa.Column('Method', sa.String(), nullable=False),
    sa.Column('Metric', sa.String(), nullable=False),
    sa.Column('ColumnName', sa.String(), nullable=False),
    sa.Column('Value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['MontecarloTestId'], ['MontecarloTests.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('MetricsWarehouse')
    op.drop_table('Trades')
    op.drop_table('RandomTests')
    op.drop_table('MontecarloTests')
    op.drop_table('LuckTests')
    op.drop_table('BotTradePerformances')
    op.drop_index(op.f('ix_BotPerformances_DateTo'), table_name='BotPerformances')
    op.drop_index(op.f('ix_BotPerformances_DateFrom'), table_name='BotPerformances')
    op.drop_table('BotPerformances')
    op.drop_table('Bots')
    op.drop_table('Tickers')
    op.drop_table('Timeframes')
    op.drop_table('Strategies')
    op.drop_table('Configs')
    op.drop_table('Categories')
    # ### end Alembic commands ###
